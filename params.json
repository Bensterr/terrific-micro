{"name":"Terrific Micro","tagline":"Powerful template for simple & complex frontend projects with a tiny footprint.","body":"Terrific Micro\r\n==============\r\n\r\nPowerful template for simple & complex frontend-only projects with a tiny footprint. It's useful to read more about the Terrific concept on http://terrifically.org first.\r\n\r\nFeatures\r\n========\r\n* CSS/JS concatenation & minification\r\n* LESS/SASS support (optional)\r\n* Caching (LESS/SASS) for optimal performance\r\n\r\nInstallation & Requirements\r\n===========================\r\n\r\nYou just need an Apache with PHP 5+ support. That's fair, isn't it?\r\n\r\n1. Unzip https://github.com/rogerdudler/terrific-micro/archive/master.zip in your web root (or subfolder).\r\n2. Start working on your code and call `http://localhost/` to see the results.\r\n\r\nCreating modules\r\n================\r\n\r\nModules are created with the following structure in the `modules` folder.\r\n\r\n    /Example\r\n    /Example/example.html\r\n    /Example/css/example.css\r\n    /Example/js/example.js\r\n    \r\nSkins (CSS or JS) are created using the following conventions.\r\n\r\n    /Example/css/example-skinname.css\r\n    /Example/js/example-skinname.js\r\n\r\nAdditional content templates are created directly in the module folder.\r\n    \r\n    /Example/example-second.html\r\n\r\nCreating pages\r\n==============\r\n\r\nCreate a new `*.html` file in the `views` folder. Try to keep a flat structure.\r\n\r\n    /views/page.html\r\n    /views/content.html\r\n    /views/content-variant.html\r\n    \r\nYour new page can then be called by the following URL (with or without trailing slash)\r\n\r\n    http://localhost/page/\r\n    \r\nRender Modules\r\n==============\r\n\r\nPages are meant to be compositions of your modules. Within your `pages`, you can render a `module` with one of the following commands.\r\n\r\nRender the Example module.\r\n\r\n    <?php module('Example') ?>\r\n\r\nRender \"second\" template from the Example module.\r\n\r\n    <?php module('Example', 'second') ?>\r\n\r\nRender the Example module with skin \"blue\".\r\n\r\n    <?php module('Example', null, 'blue') ?>\r\n \r\nRender the Example module with additional attributes.\r\n\r\n    <?php module('Example', null, null, array('data-id' => 1)) ?>\r\n    \r\nRender Partials\r\n===============\r\n\r\nRender a partial (HTML snippet). Partials are placed in `views/partials/` as `*.html` files (e.g. foot.html).\r\n\r\n    <?php partial('foot') ?>\r\n    \r\nMinification\r\n============\r\n\r\nYou can get the minified versions of your CSS/JS by adding the URL Parameter `min`. This is especially useful when deploying for production.\r\n\r\n    http://localhost/app.css?min\r\n    http://localhost/app.js?min\r\n    \r\nConfiguration\r\n=============\r\n\r\nYou're able to configure the include order for concatenation by defining the include patterns in `assets/assets.json`. You can remove `*.less`, `*.scss` or other entries if you don't need them.\r\n\r\n    {\r\n        \"css\": [\r\n            \"reset.css\",\r\n            \"elements.css\",\r\n            \"*.css\",\r\n            \"*.less\",\r\n            \"*.scss\"\r\n        ],\r\n        \"js\": [\r\n            \"jquery.min.js\",\r\n            \"terrific.min.js\",\r\n            \"*.js\"\r\n        ]\r\n    }\r\n    \r\nOptimization\r\n============\r\n\r\nIf you don't need SASS or LESS support, you can just drop those folders from the `library` folder to save some space.\r\n\r\nIncludes\r\n========\r\n\r\n* TerrificJS (http://terrifically.org)\r\n* JQuery (optional, you can also use zepto)\r\n* YUI CSS Reset (optional)\r\n","google":"UA-652147-13","note":"Don't delete this file! It's used internally to help with page regeneration."}